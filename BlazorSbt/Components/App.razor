<!DOCTYPE html>
<html lang="en" style="scrollbar-gutter: stable;">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="/" />
    <link rel="stylesheet" href="bootstrap/bootstrap.min.css" />
    <link rel="stylesheet" href="app.css" />
    <link rel="stylesheet" href="BlazorSbt.styles.css" />
    <link rel="stylesheet" href="_content/Radzen.Blazor/css/standard.css">
    <link rel="icon" type="image/png" href="favicon.png" />
    <HeadOutlet @rendermode="RenderModeForPage" />
</head>

<body>
    <Routes @rendermode="RenderModeForPage" />
    <script src="_framework/blazor.web.js"></script>
    <script src="_content/Radzen.Blazor/Radzen.Blazor.js?v=@(typeof(Radzen.Colors).Assembly.GetName().Version)"></script>
</body>

</html>

@code {
    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    private IComponentRenderMode? RenderModeForPage
    {
        get
        {
            if (BlazorSbt.Shared.FeatureFlags.UseInteractiveRouting)
            {
                string path = HttpContext.Request.Path;
                if (this.IsHockeyStandingsList(path))
                {
                    return null; // static rendering
                }
                else if (this.IsScoresPage(path))
                {
                    return null; // static rendering
                }
                else
                {
                    return InteractiveServer;
                }
            }
            else
            {
                return null; // static rendering
            }
        }
    }
    
    private bool IsHockeyStandingsList(string path)
    {
        // if standings list page, will only have 1 segment in path

        string[] segments = path.Split('/');

        if (segments.Length == 2 && path.ToLower().Contains("hockey"))
        {
            return true;
        }

        return false;
    }

    private bool IsScoresPage(string path)
    {
        // if scores page, third segment in path will be an integer for game ID
        string[] segments = path.Split('/');

        if (segments.Length >= 4 && int.TryParse(segments[3], out int gameID))
        {
            return true;
        }

        return false;
    }
}